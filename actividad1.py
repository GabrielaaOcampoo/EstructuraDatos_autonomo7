# Gabriela Ocampo - Implementaci√≥n de b√∫squeda secuencial y binaria

# üåü B√∫squeda secuencial
def busqueda_secuencial(lista, objetivo):
    """
    Como quien recorre un camino sin se√±ales,
    vamos elemento por elemento, sin prisas pero sin pausa,
    esperando que, en alg√∫n rinc√≥n, aparezca lo que buscamos.
    Devuelve el √≠ndice del hallazgo y las veces que el coraz√≥n se ilusion√≥.
    """
    comparaciones = 0
    for i, elemento in enumerate(lista):
        comparaciones += 1
        if elemento == objetivo:
            return i, comparaciones
    return -1, comparaciones  # A veces el destino no est√° donde uno esperaba

# B√∫squeda binaria
def busqueda_binaria(lista, objetivo):
    """
    Aqu√≠ la l√≥gica es br√∫jula y la lista es mapa.
    No caminamos todos los tramos, solo los justos.
    Cada paso reduce el mundo a la mitad, como quien decide con firmeza.
    Devuelve el √≠ndice del encuentro y las decisiones tomadas en el proceso.
    """
    bajo = 0
    alto = len(lista) - 1
    comparaciones = 0
    while bajo <= alto:
        comparaciones += 1
        medio = (bajo + alto) // 2
        if lista[medio] == objetivo:
            return medio, comparaciones
        elif lista[medio] < objetivo:
            bajo = medio + 1
        else:
            alto = medio - 1
    return -1, comparaciones  # Porque tambi√©n en la l√≥gica cabe la incertidumbre

# Lista ordenada ‚Äî porque a veces el orden es la mitad del camino
A = [3, 7, 12, 18, 23, 31, 45, 52, 66, 78]
elemento_a_buscar = 31

# Prueba b√∫squeda secuencial ‚Äî cuando el coraz√≥n busca sin algoritmo
indice_s, pasos_s = busqueda_secuencial(A, elemento_a_buscar)
print(f"B√∫squeda Secuencial -> √çndice encontrado: {indice_s}, Comparaciones: {pasos_s}")

# Prueba b√∫squeda binaria ‚Äî cuando la l√≥gica se convierte en arte
indice_b, pasos_b = busqueda_binaria(A, elemento_a_buscar)
print(f"B√∫squeda Binaria -> √çndice encontrado: {indice_b}, Comparaciones: {pasos_b}")

# üåü Si puedes so√±arlo, puedes programarlo :) ‚Äî porque cada l√≠nea tambi√©n escribe una historia
